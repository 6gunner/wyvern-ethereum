{
  "contractName": "WyvernDAO",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        },
        {
          "name": "metadataHash",
          "type": "bytes"
        },
        {
          "name": "timeCreated",
          "type": "uint256"
        },
        {
          "name": "votingDeadline",
          "type": "uint256"
        },
        {
          "name": "finalized",
          "type": "bool"
        },
        {
          "name": "proposalPassed",
          "type": "bool"
        },
        {
          "name": "numberOfVotes",
          "type": "uint256"
        },
        {
          "name": "proposalHash",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "delegatesByDelegator",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "REQUIRED_SHARES_TO_BE_BOARD_MEMBER",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "lockedDelegatingTokens",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "proposalNumber",
          "type": "uint256"
        }
      ],
      "name": "countVotes",
      "outputs": [
        {
          "name": "yea",
          "type": "uint256"
        },
        {
          "name": "nay",
          "type": "uint256"
        },
        {
          "name": "quorum",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "proposalNumber",
          "type": "uint256"
        },
        {
          "name": "transactionBytecode",
          "type": "bytes"
        }
      ],
      "name": "executeProposal",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "sharesTokenAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "delegatedAmountsByDelegate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "numProposals",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "proposalNumber",
          "type": "uint256"
        },
        {
          "name": "shareholder",
          "type": "address"
        }
      ],
      "name": "hasVoted",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "TOKEN_DECIMALS",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "tokensToLock",
          "type": "uint256"
        },
        {
          "name": "delegate",
          "type": "address"
        }
      ],
      "name": "setDelegateAndLockTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "clearDelegateAndUnlockTokens",
      "outputs": [
        {
          "name": "lockedTokens",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "debatingPeriodInMinutes",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "minimumSharesToPassAVote",
          "type": "uint256"
        },
        {
          "name": "minutesForDebate",
          "type": "uint256"
        },
        {
          "name": "sharesToBeBoardMember",
          "type": "uint256"
        }
      ],
      "name": "changeVotingRules",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "minimumQuorum",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        },
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "receiveApproval",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tokenLocker",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MINIMUM_QUORUM",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "requiredSharesToBeBoardMember",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "proposalNumber",
          "type": "uint256"
        },
        {
          "name": "supportsProposal",
          "type": "bool"
        }
      ],
      "name": "vote",
      "outputs": [
        {
          "name": "voteID",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        },
        {
          "name": "weiAmount",
          "type": "uint256"
        },
        {
          "name": "jobMetadataHash",
          "type": "bytes"
        },
        {
          "name": "transactionBytecode",
          "type": "bytes"
        }
      ],
      "name": "newProposal",
      "outputs": [
        {
          "name": "proposalID",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DEBATE_PERIOD_MINUTES",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "proposalNumber",
          "type": "uint256"
        },
        {
          "name": "beneficiary",
          "type": "address"
        },
        {
          "name": "weiAmount",
          "type": "uint256"
        },
        {
          "name": "transactionBytecode",
          "type": "bytes"
        }
      ],
      "name": "checkProposalCode",
      "outputs": [
        {
          "name": "codeChecksOut",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalLockedTokens",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "sharesAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "proposalID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "metadataHash",
          "type": "bytes"
        }
      ],
      "name": "ProposalAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "proposalID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "position",
          "type": "bool"
        },
        {
          "indexed": false,
          "name": "voter",
          "type": "address"
        }
      ],
      "name": "Voted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "proposalID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "yea",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "nay",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "quorum",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "active",
          "type": "bool"
        }
      ],
      "name": "ProposalTallied",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newMinimumQuorum",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "newDebatingPeriodInMinutes",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "newSharesTokenAddress",
          "type": "address"
        }
      ],
      "name": "ChangeOfRules",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "delegator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "numberOfTokens",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "delegate",
          "type": "address"
        }
      ],
      "name": "TokensDelegated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "delegator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "numberOfTokens",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "delegate",
          "type": "address"
        }
      ],
      "name": "TokensUndelegated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ReceivedEther",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "ReceivedTokens",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.23+commit.124ca40d\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"metadataHash\",\"type\":\"bytes\"},{\"name\":\"timeCreated\",\"type\":\"uint256\"},{\"name\":\"votingDeadline\",\"type\":\"uint256\"},{\"name\":\"finalized\",\"type\":\"bool\"},{\"name\":\"proposalPassed\",\"type\":\"bool\"},{\"name\":\"numberOfVotes\",\"type\":\"uint256\"},{\"name\":\"proposalHash\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"delegatesByDelegator\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"REQUIRED_SHARES_TO_BE_BOARD_MEMBER\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockedDelegatingTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"proposalNumber\",\"type\":\"uint256\"}],\"name\":\"countVotes\",\"outputs\":[{\"name\":\"yea\",\"type\":\"uint256\"},{\"name\":\"nay\",\"type\":\"uint256\"},{\"name\":\"quorum\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"proposalNumber\",\"type\":\"uint256\"},{\"name\":\"transactionBytecode\",\"type\":\"bytes\"}],\"name\":\"executeProposal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sharesTokenAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"delegatedAmountsByDelegate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numProposals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"proposalNumber\",\"type\":\"uint256\"},{\"name\":\"shareholder\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TOKEN_DECIMALS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokensToLock\",\"type\":\"uint256\"},{\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"setDelegateAndLockTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"clearDelegateAndUnlockTokens\",\"outputs\":[{\"name\":\"lockedTokens\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"debatingPeriodInMinutes\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"minimumSharesToPassAVote\",\"type\":\"uint256\"},{\"name\":\"minutesForDebate\",\"type\":\"uint256\"},{\"name\":\"sharesToBeBoardMember\",\"type\":\"uint256\"}],\"name\":\"changeVotingRules\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minimumQuorum\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"receiveApproval\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenLocker\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MINIMUM_QUORUM\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"requiredSharesToBeBoardMember\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"proposalNumber\",\"type\":\"uint256\"},{\"name\":\"supportsProposal\",\"type\":\"bool\"}],\"name\":\"vote\",\"outputs\":[{\"name\":\"voteID\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"beneficiary\",\"type\":\"address\"},{\"name\":\"weiAmount\",\"type\":\"uint256\"},{\"name\":\"jobMetadataHash\",\"type\":\"bytes\"},{\"name\":\"transactionBytecode\",\"type\":\"bytes\"}],\"name\":\"newProposal\",\"outputs\":[{\"name\":\"proposalID\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DEBATE_PERIOD_MINUTES\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"proposalNumber\",\"type\":\"uint256\"},{\"name\":\"beneficiary\",\"type\":\"address\"},{\"name\":\"weiAmount\",\"type\":\"uint256\"},{\"name\":\"transactionBytecode\",\"type\":\"bytes\"}],\"name\":\"checkProposalCode\",\"outputs\":[{\"name\":\"codeChecksOut\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalLockedTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"sharesAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"proposalID\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"metadataHash\",\"type\":\"bytes\"}],\"name\":\"ProposalAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"proposalID\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"position\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"proposalID\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"yea\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"nay\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"quorum\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"ProposalTallied\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newMinimumQuorum\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newDebatingPeriodInMinutes\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newSharesTokenAddress\",\"type\":\"address\"}],\"name\":\"ChangeOfRules\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"numberOfTokens\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"TokensDelegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"numberOfTokens\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"TokensUndelegated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ReceivedEther\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ReceivedTokens\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"Project Wyvern Developers\",\"methods\":{\"changeVotingRules(uint256,uint256,uint256)\":{\"params\":{\"minimumSharesToPassAVote\":\"proposal can vote only if the sum of shares held by all voters exceed this number\",\"minutesForDebate\":\"the minimum amount of delay between when a proposal is made and when it can be executed\",\"sharesToBeBoardMember\":\"the minimum number of shares required to create proposals\"}},\"checkProposalCode(uint256,address,uint256,bytes)\":{\"params\":{\"beneficiary\":\"who to send the ether to\",\"proposalNumber\":\"ID number of the proposal to query\",\"transactionBytecode\":\"bytecode of transaction\",\"weiAmount\":\"amount of ether to send\"}},\"clearDelegateAndUnlockTokens()\":{\"details\":\"Can only be called by a sending address currently delegating tokens, will transfer all locked tokens back to the sender\",\"return\":\"The number of tokens previously locked, now released\"},\"countVotes(uint256)\":{\"params\":{\"proposalNumber\":\"proposal number\"},\"return\":\"yea votes, nay votes, quorum (total votes)\"},\"executeProposal(uint256,bytes)\":{\"params\":{\"proposalNumber\":\"proposal number\",\"transactionBytecode\":\"optional: if the transaction contained a bytecode, you need to send it\"}},\"hasVoted(uint256,address)\":{\"params\":{\"proposalNumber\":\"proposal number\",\"shareholder\":\"address to query\"},\"return\":\"whether or not the specified address has cast a vote on the specified proposal\"},\"newProposal(address,uint256,bytes,bytes)\":{\"details\":\"Submit proposal for the DAO to execute a particular transaction. Submitter should check that the `beneficiary` account exists, unless the intent is to burn Ether.\",\"params\":{\"beneficiary\":\"who to send the ether to\",\"jobMetadataHash\":\"Hash of job metadata (IPFS)\",\"transactionBytecode\":\"bytecode of transaction\",\"weiAmount\":\"amount of ether to send, in wei\"}},\"receiveApproval(address,uint256,address,bytes)\":{\"details\":\"Receive tokens and generate a log event\",\"params\":{\"extraData\":\"Additional data to log\",\"from\":\"Address from which to transfer tokens\",\"token\":\"Address of token\",\"value\":\"Amount of tokens to transfer\"}},\"setDelegateAndLockTokens(uint256,address)\":{\"details\":\"An address holding tokens (shares) may only delegate some portion of their vote to one delegate at any one time\",\"params\":{\"delegate\":\"the address to which votes equal to the number of tokens locked will be delegated\",\"tokensToLock\":\"number of tokens to be locked (sending address must have at least this many tokens)\"}},\"vote(uint256,bool)\":{\"details\":\"Vote in favor or against an existing proposal. Voter should check that the proposal destination account exists, unless the intent is to burn Ether.\",\"params\":{\"proposalNumber\":\"number of proposal\",\"supportsProposal\":\"either in favor or against it\"}}},\"title\":\"WyvernDAO\"},\"userdoc\":{\"methods\":{\"changeVotingRules(uint256,uint256,uint256)\":{\"notice\":\"Change voting rules     * Make so that proposals need tobe discussed for at least `minutesForDebate/60` hours and all voters combined must own more than `minimumSharesToPassAVote` shares of token `sharesAddress` to be executed and a shareholder needs `sharesToBeBoardMember` shares to create a transaction proposal\"},\"checkProposalCode(uint256,address,uint256,bytes)\":{\"notice\":\"Check if a proposal code matches\"},\"clearDelegateAndUnlockTokens()\":{\"notice\":\"Undelegate all delegated tokens Clear the delegate address for all tokens delegated by the sending address, unlocking the locked tokens.\"},\"countVotes(uint256)\":{\"notice\":\"Count the votes, including delegated votes, in support of, against, and in total for a particular proposal\"},\"executeProposal(uint256,bytes)\":{\"notice\":\"Finish vote     * Count the votes proposal #`proposalNumber` and execute it if approved\"},\"hasVoted(uint256,address)\":{\"notice\":\"Return whether a particular shareholder has voted on a particular proposal (convenience function)\"},\"newProposal(address,uint256,bytes,bytes)\":{\"notice\":\"Add Proposal     * Propose to send `weiAmount / 1e18` ether to `beneficiary` for `jobMetadataHash`. `transactionBytecode ? Contains : Does not contain` code.\"},\"setDelegateAndLockTokens(uint256,address)\":{\"notice\":\"Delegate an amount of tokens Set the delegate address for a specified number of tokens belonging to the sending address, locking the tokens.\"},\"vote(uint256,bool)\":{\"notice\":\"Log a vote for a proposal     * Vote `supportsProposal? in support of : against` proposal #`proposalNumber`\"}}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/WyvernDAO.sol\":\"WyvernDAO\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xf053bc62384ddd21b4f74a98029ebb70817a64a920052529e8456f75a574acb2\",\"urls\":[\"bzzr://e6e26f56d60fd6b011c765d42131cc60d027bc79a753055c232702c78c1746d8\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xebd8d5da910e7dddae936c0b132a2ff39b84f53f0c228871e9b5ecdba5fa63ba\",\"urls\":[\"bzzr://4e524bc48b6d1257a259a43b5f7e606a9bd14d15ad305ade1037066b38a0ac02\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol\":{\"keccak256\":\"0x31e283cd96967380623dd1a37a33ed463454a6059f068e9ed318a0ec504f095b\",\"urls\":[\"bzzr://88955599dc0d27c8ce845171915d17536fd996c1e253a6572617112531f7cbcc\"]},\"project:/contracts/WyvernDAO.sol\":{\"keccak256\":\"0x61ff2b57f1539207e3ca66b12a7ff93dde3337b753c8a8f5c64b212064ecd070\",\"urls\":[\"bzzr://b9d6071fb7a07b07d046b11c779dc2a029a88a9a7fe30c138e53750e7101ba95\"]},\"project:/contracts/common/TokenLocker.sol\":{\"keccak256\":\"0xf6f603f07f2efd3497339e687399a24b0dd4d6e972f30263c8d4ccee1392d3b2\",\"urls\":[\"bzzr://7830be759e499a820eafed97963e7666c1efdd478c79736cec5f764c301beb3e\"]},\"project:/contracts/common/TokenRecipient.sol\":{\"keccak256\":\"0xecb0738b5567475883913156bd6e86a6dca31e63b1fc3ed3581ca6b7ef23660c\",\"urls\":[\"bzzr://b0c8e13ddc98cdc80d87caf109f853c1bd96fc52c0015065fa90ea116ba9355d\"]},\"project:/contracts/dao/DelegatedShareholderAssociation.sol\":{\"keccak256\":\"0xdaa6021c4db7edec7887bcddd78c348bfc3d82191228faa8dc233804b0d38153\",\"urls\":[\"bzzr://262106e037868b9a691cd222d55a46c78dfab0914b62b60aa457965ffe6dd73d\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051602080611fc8833981016040525160048054600160a060020a031916600160a060020a038316179055686c6b935b8bbd400000600955692a5a058fc295ed0000006000556110e0600155806100676100bb565b600160a060020a03909116815260405190819003602001906000f080158015610094573d6000803e3d6000fd5b50600a8054600160a060020a031916600160a060020a0392909216919091179055506100cb565b60405161028c80611d3c83390190565b611c62806100da6000396000f3006080604052600436106101535763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663013cf08b8114610194578063064cc7a71461027257806306fdde03146102af57806306fde1691461033957806313f47f24146103605780631840f0ca14610381578063237e9492146103b757806327ebcf0e146104175780633fb3ec281461042c578063400e39491461044d57806343859632146104625780635b7f415c1461049a5780635fa7df6b146104af578063645bd436146104d357806369bd3436146104e85780636e676b69146104fd5780638160f0b51461051b5780638f4ffcb114610530578063a80bf3e6146105a0578063b159beac146105b5578063b94fa03f146105ca578063c9d27afe146105df578063dbc45228146105fc578063ecc46d1b146106a3578063eceb2945146106b8578063f5c476f914610727575b604080513481529051600160a060020a033316917fa419615bc8fda4c87663805ee2a3597a6d71c1d476911d9892f340d965bc7bf1919081900360200190a2005b3480156101a057600080fd5b506101ac60043561073c565b60408051600160a060020a038b16815260208082018b9052606082018990526080820188905286151560a083015285151560c083015260e0820185905261010082018490526101209282018381528a519383019390935289519192916101408401918b019080838360005b8381101561022f578181015183820152602001610217565b50505050905090810190601f16801561025c5780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390f35b34801561027e57600080fd5b50610293600160a060020a0360043516610831565b60408051600160a060020a039092168252519081900360200190f35b3480156102bb57600080fd5b506102c461084c565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102fe5781810151838201526020016102e6565b50505050905090810190601f16801561032b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561034557600080fd5b5061034e610883565b60408051918252519081900360200190f35b34801561036c57600080fd5b5061034e600160a060020a0360043516610890565b34801561038d57600080fd5b506103996004356108a2565b60408051938452602084019290925282820152519081900360600190f35b3480156103c357600080fd5b5060408051602060046024803582810135601f8101859004850286018501909652858552610415958335953695604494919390910191908190840183828082843750949750610a039650505050505050565b005b34801561042357600080fd5b50610293610c56565b34801561043857600080fd5b5061034e600160a060020a0360043516610c65565b34801561045957600080fd5b5061034e610c77565b34801561046e57600080fd5b50610486600435600160a060020a0360243516610c7d565b604080519115158252519081900360200190f35b3480156104a657600080fd5b5061034e610cc5565b3480156104bb57600080fd5b50610415600435600160a060020a0360243516610cca565b3480156104df57600080fd5b5061034e610fb7565b3480156104f457600080fd5b5061034e61121a565b34801561050957600080fd5b50610415600435602435604435611220565b34801561052757600080fd5b5061034e6112ab565b34801561053c57600080fd5b50604080516020601f60643560048181013592830184900484028501840190955281845261041594600160a060020a038135811695602480359660443590931695369560849492019181908401838280828437509497506112b19650505050505050565b3480156105ac57600080fd5b50610293611418565b3480156105c157600080fd5b5061034e611427565b3480156105d657600080fd5b5061034e611435565b3480156105eb57600080fd5b5061034e600435602435151561143b565b34801561060857600080fd5b50604080516020600460443581810135601f810184900484028501840190955284845261034e948235600160a060020a031694602480359536959460649492019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375094975061166f9650505050505050565b3480156106af57600080fd5b5061034e61193f565b3480156106c457600080fd5b50604080516020601f60643560048181013592830184900484028501840190955281845261048694803594600160a060020a0360248035919091169560443595369560849493019181908401838280828437509497506119459650505050505050565b34801561073357600080fd5b5061034e611a07565b600280548290811061074a57fe5b6000918252602091829020600a91909102018054600180830154600280850180546040805161010096831615969096026000190190911692909204601f8101889004880285018801909252818452600160a060020a03909416965090949192918301828280156107fb5780601f106107d0576101008083540402835291602001916107fb565b820191906000526020600020905b8154815290600101906020018083116107de57829003601f168201915b5050505060038301546004840154600585015460068601546007909601549495929491935060ff80821693610100909204169189565b600560205260009081526040902054600160a060020a031681565b60408051808201909152601281527f50726f6a6563742057797665726e2044414f0000000000000000000000000000602082015281565b686c6b935b8bbd40000081565b60066020526000908152604090205481565b60008060008060008060006002888154811015156108bc57fe5b90600052602060002090600a02019350600096506000955060009450600092505b60088401548310156109f857600884018054849081106108f957fe5b60009182526020808320600480549390910180546040805160e060020a6370a08231028152600160a060020a03610100909304831694810194909452519197506109b6959416936370a0823193602480850194919392918390030190829087803b15801561096657600080fd5b505af115801561097a573d6000803e3d6000fd5b505050506040513d602081101561099057600080fd5b505183546101009004600160a060020a0316600090815260076020526040902054611a0d565b90506109c28582611a0d565b825490955060ff16156109e0576109d98782611a0d565b96506109ed565b6109ea8682611a0d565b95505b8260010192506108dd565b505050509193909250565b60008060008030600160a060020a031633600160a060020a031614151515610a2a57600080fd5b6002805487908110610a3857fe5b90600052602060002090600a0201935083600401544210158015610a615750600584015460ff16155b8015610aff5750835460018501546040516c01000000000000000000000000600160a060020a039093169283028152601481018290528751889190603482019060208401908083835b60208310610ac95780518252601f199092019160209182019101610aaa565b5181516020939093036101000a6000190180199091169216919091179052604051920182900390912060078a0154149450505050505b1515610b0a57600080fd5b610b13866108a2565b6000549295509093509150811015610b2a57600080fd5b60058401805460ff1916600117905581831115610be45760058401805461ff001916610100179055835460018501546040518751600160a060020a03909316928891908190602084019080838360005b83811015610b92578181015183820152602001610b7a565b50505050905090810190601f168015610bbf5780820380516001836020036101000a031916815260200191505b5091505060006040518083038185875af1925050501515610bdf57600080fd5b610bf2565b60058401805461ff00191690555b600584015460408051888152602081018690528082018590526060810184905261010090920460ff1615156080830152517f748f0810c68633063bb13f3c71e10cd1889925b3721d6e567114d0632574a3969160a0908290030190a1505050505050565b600454600160a060020a031681565b60076020526000908152604090205481565b60035481565b600080600284815481101515610c8f57fe5b60009182526020808320600160a060020a03969096168352600a919091029094016009019093525050604090205460ff16919050565b601281565b600480546040805160e060020a6370a08231028152600160a060020a03338116948201949094529051600093909216916370a082319160248082019260209290919082900301818787803b158015610d2157600080fd5b505af1158015610d35573d6000803e3d6000fd5b505050506040513d6020811015610d4b57600080fd5b505111610d5757600080fd5b600160a060020a033381166000908152600560205260409020541615610d7c57600080fd5b30600160a060020a031633600160a060020a031614151515610d9d57600080fd5b600160a060020a0333811660009081526006602090815260408083208690559284168252600790522054610dd19083611a0d565b600160a060020a038216600090815260076020526040902055600854610df79083611a0d565b60085533600160a060020a039081166000818152600560209081526040808320805473ffffffffffffffffffffffffffffffffffffffff191687871617905560048054600a5483517f23b872dd00000000000000000000000000000000000000000000000000000000815292830196909652948616602482015260448101889052905193909416936323b872dd9360648083019491928390030190829087803b158015610ea357600080fd5b505af1158015610eb7573d6000803e3d6000fd5b505050506040513d6020811015610ecd57600080fd5b50511515610eda57600080fd5b60085460048054600a546040805160e060020a6370a08231028152600160a060020a0392831694810194909452519116916370a082319160248083019260209291908290030181600087803b158015610f3257600080fd5b505af1158015610f46573d6000803e3d6000fd5b505050506040513d6020811015610f5c57600080fd5b505114610f6857600080fd5b80600160a060020a031633600160a060020a03167f57593c23286b632d1ba413b24ecae252f34f6b81fdff1022dc7ac0d78cde56b7846040518082815260200191505060405180910390a35050565b600160a060020a0333811660009081526005602052604081205490918291161515610fe157600080fd5b30600160a060020a031633600160a060020a03161415151561100257600080fd5b5050600160a060020a033381166000908152600560209081526040808320546006835281842080549085905594168084526007909252909120546110469083611a20565b600160a060020a03821660009081526007602052604090205560085461106c9083611a20565b600855600160a060020a033381166000818152600560209081526040808320805473ffffffffffffffffffffffffffffffffffffffff19169055600a5481517fa9059cbb000000000000000000000000000000000000000000000000000000008152600481019590955260248501889052905194169363a9059cbb93604480820194918390030190829087803b15801561110557600080fd5b505af1158015611119573d6000803e3d6000fd5b505050506040513d602081101561112f57600080fd5b5051151561113c57600080fd5b60085460048054600a546040805160e060020a6370a08231028152600160a060020a0392831694810194909452519116916370a082319160248083019260209291908290030181600087803b15801561119457600080fd5b505af11580156111a8573d6000803e3d6000fd5b505050506040513d60208110156111be57600080fd5b5051146111ca57600080fd5b80600160a060020a031633600160a060020a03167fccc924ef18d5fcabbf624302b6a02f9014c9b3371994eacc0cec2c107f2503e4846040518082815260200191505060405180910390a35b5090565b60015481565b30600160a060020a031633600160a060020a031614151561124057600080fd5b82151561124c57600192505b6000839055600182905560098190556004546040805185815260208101859052600160a060020a0390921682820152517f68259880819f96f54b67d672fefc666565de06099c91b57a689a42073ba090c99181900360600190a1505050565b60005481565b604080517f23b872dd000000000000000000000000000000000000000000000000000000008152600160a060020a038681166004830152308116602483015260448201869052915184928316916323b872dd9160648083019260209291908290030181600087803b15801561132557600080fd5b505af1158015611339573d6000803e3d6000fd5b505050506040513d602081101561134f57600080fd5b5051151561135c57600080fd5b82600160a060020a031685600160a060020a03167fd65b48fd35864b3528d38e44760be5553248f89bf3ff6b06cca57817cc2650bf86856040518083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156113d65781810151838201526020016113be565b50505050905090810190601f1680156114035780820380516001836020036101000a031916815260200191505b50935050505060405180910390a35050505050565b600a54600160a060020a031681565b692a5a058fc295ed00000081565b60095481565b6000806000600460009054906101000a9004600160a060020a0316600160a060020a03166370a08231336040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b1580156114c957600080fd5b505af11580156114dd573d6000803e3d6000fd5b505050506040513d60208110156114f357600080fd5b5051116114ff57600080fd5b30600160a060020a031633600160a060020a03161415151561152057600080fd5b600280548590811061152e57fe5b60009182526020808320600160a060020a03331684526009600a90930201918201905260409091205490915060ff1615156001141561156c57600080fd5b600881018054906115809060018301611a32565b91506040805190810160405280841515815260200133600160a060020a031681525081600801838154811015156115b357fe5b600091825260208083208451920180549482015160ff199586169315159390931774ffffffffffffffffffffffffffffffffffffffff001916610100600160a060020a03948516021790553390911680835260098501825260409283902080549094166001908117909455928501600685015581518781528615159181019190915280820192909252517f86abfce99b7dd908bec0169288797f85049ec73cbe046ed9de818fab3a497ae0916060908290030190a15092915050565b600954600480546040805160e060020a6370a08231028152600160a060020a033381169482019490945290516000948594909316916370a0823191602480830192602092919082900301818887803b1580156116ca57600080fd5b505af11580156116de573d6000803e3d6000fd5b505050506040513d60208110156116f457600080fd5b5051101561170157600080fd5b30600160a060020a031633600160a060020a03161415151561172257600080fd5b600a54600160a060020a038781169116141561173d57600080fd5b600280549061174f9060018301611a5b565b915060028281548110151561176057fe5b6000918252602091829020600a9190910201805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0389161781556001810187905585519092506117b691600284019190870190611a87565b508585846040518084600160a060020a0316600160a060020a03166c0100000000000000000000000002815260140183815260200182805190602001908083835b602083106118165780518252601f1990920191602091820191016117f7565b51815160209384036101000a60001901801990921691161790526040805192909401829003822060078a01554260038a01819055600154603c020160048a015560058901805461ffff19169055600060068a018190558a8352600160a060020a038f16838301529382018d90526080606083018181528d51918401919091528c517f06d6b095e85f5218421975622a7aee84a98b32aa7d174b90088357014003b43399508b98508f97508e96508d95939450909260a0850192860191908190849084905b838110156118f25781810151838201526020016118da565b50505050905090810190601f16801561191f5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a16001820160035550949350505050565b6110e081565b60008060028681548110151561195757fe5b90600052602060002090600a020190508484846040518084600160a060020a0316600160a060020a03166c0100000000000000000000000002815260140183815260200182805190602001908083835b602083106119c65780518252601f1990920191602091820191016119a7565b5181516000196020949094036101000a9390930192831692191691909117905260405192018290039091206007870154149650505050505050949350505050565b60085481565b81810182811015611a1a57fe5b92915050565b600082821115611a2c57fe5b50900390565b815481835581811115611a5657600083815260209020611a56918101908301611b01565b505050565b815481835581811115611a5657600a0281600a028360005260206000209182019101611a569190611b36565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611ac857805160ff1916838001178555611af5565b82800160010185558215611af5579182015b82811115611af5578251825591602001919060010190611ada565b50611216929150611bb7565b611b3391905b8082111561121657805474ffffffffffffffffffffffffffffffffffffffffff19168155600101611b07565b90565b611b3391905b8082111561121657805473ffffffffffffffffffffffffffffffffffffffff19168155600060018201819055611b756002830182611bd1565b6000600383018190556004830181905560058301805461ffff191690556006830181905560078301819055611bae906008840190611c18565b50600a01611b3c565b611b3391905b808211156112165760008155600101611bbd565b50805460018160011615610100020316600290046000825580601f10611bf75750611c15565b601f016020900490600052602060002090810190611c159190611bb7565b50565b5080546000825590600052602060002090810190611c159190611b015600a165627a7a7230582085ba647e52374f8a70bddd9bd32882e824f98e5e74f80d18430b9d59acfe6b1a0029608060405234801561001057600080fd5b5060405160208061028c833981016040525160008054600160a060020a03338116600160a060020a0319928316179092556001805492909316911617905561022f8061005d6000396000f3006080604052600436106100565763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416638da5cb5b811461005b578063a9059cbb14610099578063fc0c546a146100de575b600080fd5b34801561006757600080fd5b506100706100f3565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b3480156100a557600080fd5b506100ca73ffffffffffffffffffffffffffffffffffffffff6004351660243561010f565b604080519115158252519081900360200190f35b3480156100ea57600080fd5b506100706101e7565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b600080543373ffffffffffffffffffffffffffffffffffffffff90811691161461013857600080fd5b600154604080517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8681166004830152602482018690529151919092169163a9059cbb9160448083019260209291908290030181600087803b1580156101b457600080fd5b505af11580156101c8573d6000803e3d6000fd5b505050506040513d60208110156101de57600080fd5b50519392505050565b60015473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a723058209f496b1bf61146c0b3cddbcfae0ee75f1ff48a8e66b4bbd79c35fa14237a4c100029",
  "deployedBytecode": "0x6080604052600436106101535763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663013cf08b8114610194578063064cc7a71461027257806306fdde03146102af57806306fde1691461033957806313f47f24146103605780631840f0ca14610381578063237e9492146103b757806327ebcf0e146104175780633fb3ec281461042c578063400e39491461044d57806343859632146104625780635b7f415c1461049a5780635fa7df6b146104af578063645bd436146104d357806369bd3436146104e85780636e676b69146104fd5780638160f0b51461051b5780638f4ffcb114610530578063a80bf3e6146105a0578063b159beac146105b5578063b94fa03f146105ca578063c9d27afe146105df578063dbc45228146105fc578063ecc46d1b146106a3578063eceb2945146106b8578063f5c476f914610727575b604080513481529051600160a060020a033316917fa419615bc8fda4c87663805ee2a3597a6d71c1d476911d9892f340d965bc7bf1919081900360200190a2005b3480156101a057600080fd5b506101ac60043561073c565b60408051600160a060020a038b16815260208082018b9052606082018990526080820188905286151560a083015285151560c083015260e0820185905261010082018490526101209282018381528a519383019390935289519192916101408401918b019080838360005b8381101561022f578181015183820152602001610217565b50505050905090810190601f16801561025c5780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390f35b34801561027e57600080fd5b50610293600160a060020a0360043516610831565b60408051600160a060020a039092168252519081900360200190f35b3480156102bb57600080fd5b506102c461084c565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102fe5781810151838201526020016102e6565b50505050905090810190601f16801561032b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561034557600080fd5b5061034e610883565b60408051918252519081900360200190f35b34801561036c57600080fd5b5061034e600160a060020a0360043516610890565b34801561038d57600080fd5b506103996004356108a2565b60408051938452602084019290925282820152519081900360600190f35b3480156103c357600080fd5b5060408051602060046024803582810135601f8101859004850286018501909652858552610415958335953695604494919390910191908190840183828082843750949750610a039650505050505050565b005b34801561042357600080fd5b50610293610c56565b34801561043857600080fd5b5061034e600160a060020a0360043516610c65565b34801561045957600080fd5b5061034e610c77565b34801561046e57600080fd5b50610486600435600160a060020a0360243516610c7d565b604080519115158252519081900360200190f35b3480156104a657600080fd5b5061034e610cc5565b3480156104bb57600080fd5b50610415600435600160a060020a0360243516610cca565b3480156104df57600080fd5b5061034e610fb7565b3480156104f457600080fd5b5061034e61121a565b34801561050957600080fd5b50610415600435602435604435611220565b34801561052757600080fd5b5061034e6112ab565b34801561053c57600080fd5b50604080516020601f60643560048181013592830184900484028501840190955281845261041594600160a060020a038135811695602480359660443590931695369560849492019181908401838280828437509497506112b19650505050505050565b3480156105ac57600080fd5b50610293611418565b3480156105c157600080fd5b5061034e611427565b3480156105d657600080fd5b5061034e611435565b3480156105eb57600080fd5b5061034e600435602435151561143b565b34801561060857600080fd5b50604080516020600460443581810135601f810184900484028501840190955284845261034e948235600160a060020a031694602480359536959460649492019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375094975061166f9650505050505050565b3480156106af57600080fd5b5061034e61193f565b3480156106c457600080fd5b50604080516020601f60643560048181013592830184900484028501840190955281845261048694803594600160a060020a0360248035919091169560443595369560849493019181908401838280828437509497506119459650505050505050565b34801561073357600080fd5b5061034e611a07565b600280548290811061074a57fe5b6000918252602091829020600a91909102018054600180830154600280850180546040805161010096831615969096026000190190911692909204601f8101889004880285018801909252818452600160a060020a03909416965090949192918301828280156107fb5780601f106107d0576101008083540402835291602001916107fb565b820191906000526020600020905b8154815290600101906020018083116107de57829003601f168201915b5050505060038301546004840154600585015460068601546007909601549495929491935060ff80821693610100909204169189565b600560205260009081526040902054600160a060020a031681565b60408051808201909152601281527f50726f6a6563742057797665726e2044414f0000000000000000000000000000602082015281565b686c6b935b8bbd40000081565b60066020526000908152604090205481565b60008060008060008060006002888154811015156108bc57fe5b90600052602060002090600a02019350600096506000955060009450600092505b60088401548310156109f857600884018054849081106108f957fe5b60009182526020808320600480549390910180546040805160e060020a6370a08231028152600160a060020a03610100909304831694810194909452519197506109b6959416936370a0823193602480850194919392918390030190829087803b15801561096657600080fd5b505af115801561097a573d6000803e3d6000fd5b505050506040513d602081101561099057600080fd5b505183546101009004600160a060020a0316600090815260076020526040902054611a0d565b90506109c28582611a0d565b825490955060ff16156109e0576109d98782611a0d565b96506109ed565b6109ea8682611a0d565b95505b8260010192506108dd565b505050509193909250565b60008060008030600160a060020a031633600160a060020a031614151515610a2a57600080fd5b6002805487908110610a3857fe5b90600052602060002090600a0201935083600401544210158015610a615750600584015460ff16155b8015610aff5750835460018501546040516c01000000000000000000000000600160a060020a039093169283028152601481018290528751889190603482019060208401908083835b60208310610ac95780518252601f199092019160209182019101610aaa565b5181516020939093036101000a6000190180199091169216919091179052604051920182900390912060078a0154149450505050505b1515610b0a57600080fd5b610b13866108a2565b6000549295509093509150811015610b2a57600080fd5b60058401805460ff1916600117905581831115610be45760058401805461ff001916610100179055835460018501546040518751600160a060020a03909316928891908190602084019080838360005b83811015610b92578181015183820152602001610b7a565b50505050905090810190601f168015610bbf5780820380516001836020036101000a031916815260200191505b5091505060006040518083038185875af1925050501515610bdf57600080fd5b610bf2565b60058401805461ff00191690555b600584015460408051888152602081018690528082018590526060810184905261010090920460ff1615156080830152517f748f0810c68633063bb13f3c71e10cd1889925b3721d6e567114d0632574a3969160a0908290030190a1505050505050565b600454600160a060020a031681565b60076020526000908152604090205481565b60035481565b600080600284815481101515610c8f57fe5b60009182526020808320600160a060020a03969096168352600a919091029094016009019093525050604090205460ff16919050565b601281565b600480546040805160e060020a6370a08231028152600160a060020a03338116948201949094529051600093909216916370a082319160248082019260209290919082900301818787803b158015610d2157600080fd5b505af1158015610d35573d6000803e3d6000fd5b505050506040513d6020811015610d4b57600080fd5b505111610d5757600080fd5b600160a060020a033381166000908152600560205260409020541615610d7c57600080fd5b30600160a060020a031633600160a060020a031614151515610d9d57600080fd5b600160a060020a0333811660009081526006602090815260408083208690559284168252600790522054610dd19083611a0d565b600160a060020a038216600090815260076020526040902055600854610df79083611a0d565b60085533600160a060020a039081166000818152600560209081526040808320805473ffffffffffffffffffffffffffffffffffffffff191687871617905560048054600a5483517f23b872dd00000000000000000000000000000000000000000000000000000000815292830196909652948616602482015260448101889052905193909416936323b872dd9360648083019491928390030190829087803b158015610ea357600080fd5b505af1158015610eb7573d6000803e3d6000fd5b505050506040513d6020811015610ecd57600080fd5b50511515610eda57600080fd5b60085460048054600a546040805160e060020a6370a08231028152600160a060020a0392831694810194909452519116916370a082319160248083019260209291908290030181600087803b158015610f3257600080fd5b505af1158015610f46573d6000803e3d6000fd5b505050506040513d6020811015610f5c57600080fd5b505114610f6857600080fd5b80600160a060020a031633600160a060020a03167f57593c23286b632d1ba413b24ecae252f34f6b81fdff1022dc7ac0d78cde56b7846040518082815260200191505060405180910390a35050565b600160a060020a0333811660009081526005602052604081205490918291161515610fe157600080fd5b30600160a060020a031633600160a060020a03161415151561100257600080fd5b5050600160a060020a033381166000908152600560209081526040808320546006835281842080549085905594168084526007909252909120546110469083611a20565b600160a060020a03821660009081526007602052604090205560085461106c9083611a20565b600855600160a060020a033381166000818152600560209081526040808320805473ffffffffffffffffffffffffffffffffffffffff19169055600a5481517fa9059cbb000000000000000000000000000000000000000000000000000000008152600481019590955260248501889052905194169363a9059cbb93604480820194918390030190829087803b15801561110557600080fd5b505af1158015611119573d6000803e3d6000fd5b505050506040513d602081101561112f57600080fd5b5051151561113c57600080fd5b60085460048054600a546040805160e060020a6370a08231028152600160a060020a0392831694810194909452519116916370a082319160248083019260209291908290030181600087803b15801561119457600080fd5b505af11580156111a8573d6000803e3d6000fd5b505050506040513d60208110156111be57600080fd5b5051146111ca57600080fd5b80600160a060020a031633600160a060020a03167fccc924ef18d5fcabbf624302b6a02f9014c9b3371994eacc0cec2c107f2503e4846040518082815260200191505060405180910390a35b5090565b60015481565b30600160a060020a031633600160a060020a031614151561124057600080fd5b82151561124c57600192505b6000839055600182905560098190556004546040805185815260208101859052600160a060020a0390921682820152517f68259880819f96f54b67d672fefc666565de06099c91b57a689a42073ba090c99181900360600190a1505050565b60005481565b604080517f23b872dd000000000000000000000000000000000000000000000000000000008152600160a060020a038681166004830152308116602483015260448201869052915184928316916323b872dd9160648083019260209291908290030181600087803b15801561132557600080fd5b505af1158015611339573d6000803e3d6000fd5b505050506040513d602081101561134f57600080fd5b5051151561135c57600080fd5b82600160a060020a031685600160a060020a03167fd65b48fd35864b3528d38e44760be5553248f89bf3ff6b06cca57817cc2650bf86856040518083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156113d65781810151838201526020016113be565b50505050905090810190601f1680156114035780820380516001836020036101000a031916815260200191505b50935050505060405180910390a35050505050565b600a54600160a060020a031681565b692a5a058fc295ed00000081565b60095481565b6000806000600460009054906101000a9004600160a060020a0316600160a060020a03166370a08231336040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b1580156114c957600080fd5b505af11580156114dd573d6000803e3d6000fd5b505050506040513d60208110156114f357600080fd5b5051116114ff57600080fd5b30600160a060020a031633600160a060020a03161415151561152057600080fd5b600280548590811061152e57fe5b60009182526020808320600160a060020a03331684526009600a90930201918201905260409091205490915060ff1615156001141561156c57600080fd5b600881018054906115809060018301611a32565b91506040805190810160405280841515815260200133600160a060020a031681525081600801838154811015156115b357fe5b600091825260208083208451920180549482015160ff199586169315159390931774ffffffffffffffffffffffffffffffffffffffff001916610100600160a060020a03948516021790553390911680835260098501825260409283902080549094166001908117909455928501600685015581518781528615159181019190915280820192909252517f86abfce99b7dd908bec0169288797f85049ec73cbe046ed9de818fab3a497ae0916060908290030190a15092915050565b600954600480546040805160e060020a6370a08231028152600160a060020a033381169482019490945290516000948594909316916370a0823191602480830192602092919082900301818887803b1580156116ca57600080fd5b505af11580156116de573d6000803e3d6000fd5b505050506040513d60208110156116f457600080fd5b5051101561170157600080fd5b30600160a060020a031633600160a060020a03161415151561172257600080fd5b600a54600160a060020a038781169116141561173d57600080fd5b600280549061174f9060018301611a5b565b915060028281548110151561176057fe5b6000918252602091829020600a9190910201805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0389161781556001810187905585519092506117b691600284019190870190611a87565b508585846040518084600160a060020a0316600160a060020a03166c0100000000000000000000000002815260140183815260200182805190602001908083835b602083106118165780518252601f1990920191602091820191016117f7565b51815160209384036101000a60001901801990921691161790526040805192909401829003822060078a01554260038a01819055600154603c020160048a015560058901805461ffff19169055600060068a018190558a8352600160a060020a038f16838301529382018d90526080606083018181528d51918401919091528c517f06d6b095e85f5218421975622a7aee84a98b32aa7d174b90088357014003b43399508b98508f97508e96508d95939450909260a0850192860191908190849084905b838110156118f25781810151838201526020016118da565b50505050905090810190601f16801561191f5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a16001820160035550949350505050565b6110e081565b60008060028681548110151561195757fe5b90600052602060002090600a020190508484846040518084600160a060020a0316600160a060020a03166c0100000000000000000000000002815260140183815260200182805190602001908083835b602083106119c65780518252601f1990920191602091820191016119a7565b5181516000196020949094036101000a9390930192831692191691909117905260405192018290039091206007870154149650505050505050949350505050565b60085481565b81810182811015611a1a57fe5b92915050565b600082821115611a2c57fe5b50900390565b815481835581811115611a5657600083815260209020611a56918101908301611b01565b505050565b815481835581811115611a5657600a0281600a028360005260206000209182019101611a569190611b36565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611ac857805160ff1916838001178555611af5565b82800160010185558215611af5579182015b82811115611af5578251825591602001919060010190611ada565b50611216929150611bb7565b611b3391905b8082111561121657805474ffffffffffffffffffffffffffffffffffffffffff19168155600101611b07565b90565b611b3391905b8082111561121657805473ffffffffffffffffffffffffffffffffffffffff19168155600060018201819055611b756002830182611bd1565b6000600383018190556004830181905560058301805461ffff191690556006830181905560078301819055611bae906008840190611c18565b50600a01611b3c565b611b3391905b808211156112165760008155600101611bbd565b50805460018160011615610100020316600290046000825580601f10611bf75750611c15565b601f016020900490600052602060002090810190611c159190611bb7565b50565b5080546000825590600052602060002090810190611c159190611b015600a165627a7a7230582085ba647e52374f8a70bddd9bd32882e824f98e5e74f80d18430b9d59acfe6b1a0029",
  "sourceMap": "179:838:13:-;;;695:319;8:9:-1;5:2;;;30:1;27;20:12;5:2;695:319:13;;;;;;;;;;;;;746:18;:34;;-1:-1:-1;;;;;;746:34:13;-1:-1:-1;;;;;746:34:13;;;;;421:29;790;:66;541:31;-1:-1:-1;866:30:13;660:11;-1:-1:-1;906:47:13;695:319;977:30;;:::i;:::-;-1:-1:-1;;;;;977:30:13;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;963:11:13;:44;;-1:-1:-1;;;;;;963:44:13;-1:-1:-1;;;;;963:44:13;;;;;;;;;;-1:-1:-1;179:838:13;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "179:838:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1100:36:22;;;1126:9;1100:36;;;;-1:-1:-1;;;;;1114:10:22;1100:36;;;;;;;;;;;;179:838:13;3609:27:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3609:27:24;;;;;;;;;-1:-1:-1;;;;;3609:27:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3609:27:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3753:56;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3753:56:24;-1:-1:-1;;;;;3753:56:24;;;;;;;;;-1:-1:-1;;;;;3753:56:24;;;;;;;;;;;;;;240:50:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;240:50:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;240:50:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;363:87;;8:9:-1;5:2;;;30:1;27;20:12;5:2;363:87:13;;;;;;;;;;;;;;;;;;;;3854:55:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3854:55:24;-1:-1:-1;;;;;3854:55:24;;;;;14134:662;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;14134:662:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15078:1252;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;15078:1252:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15078:1252:24;;-1:-1:-1;15078:1252:24;;-1:-1:-1;;;;;;;15078:1252:24;;;3672:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3672:31:24;;;;3955:59;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3955:59:24;-1:-1:-1;;;;;3955:59:24;;;;;3642:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3642:24:24;;;;13708:187;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;13708:187:24;;;-1:-1:-1;;;;;13708:187:24;;;;;;;;;;;;;;;;;;;;;;;297:60:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;297:60:13;;;;7080:698:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7080:698:24;;;-1:-1:-1;;;;;7080:698:24;;;;;8168:788;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8168:788:24;;;;3568:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3568:35:24;;;;9663:503;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;9663:503:24;;;;;;;;;3537:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3537:25:24;;;;741:244:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;741:244:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;741:244:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;741:244:22;;-1:-1:-1;741:244:22;;-1:-1:-1;;;;;;;741:244:22;4253:30:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4253:30:24;;;;483:89:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;483:89:13;;;;4172:41:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4172:41:24;;;;12840:559;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;12840:559:24;;;;;;;;;10766:992;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;10766:992:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10766:992:24;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10766:992:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10766:992:24;;;;-1:-1:-1;10766:992:24;-1:-1:-1;10766:992:24;;-1:-1:-1;10766:992:24;;;;;;;;-1:-1:-1;10766:992:24;;-1:-1:-1;10766:992:24;;-1:-1:-1;;;;;;;10766:992:24;602:69:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;602:69:13;;;;12048:371:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;12048:371:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12048:371:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12048:371:24;;-1:-1:-1;12048:371:24;;-1:-1:-1;;;;;;;12048:371:24;4079:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4079:29:24;;;;3609:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3609:27:24;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3609:27:24;;;;-1:-1:-1;3609:27:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;3609:27:24;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3609:27:24;;;;;;;;;;;;:::o;3753:56::-;;;;;;;;;;;;-1:-1:-1;;;;;3753:56:24;;:::o;240:50:13:-;;;;;;;;;;;;;;;;;;;:::o;363:87::-;421:29;363:87;:::o;3854:55:24:-;;;;;;;;;;;;;:::o;14134:662::-;14196:8;14206;14216:11;14239:18;14354:6;14405:14;14446:15;14260:9;14270:14;14260:25;;;;;;;;;;;;;;;;;;;;14239:46;;14301:1;14295:7;;14318:1;14312:7;;14338:1;14329:10;;14363:1;14354:10;;14349:441;14370:7;;;:14;14366:18;;14349:441;;;14422:7;;;:10;;14430:1;;14422:10;;;;;;;;;;;;;;14477:18;;;14422:10;;;;14506:7;;14477:37;;;-1:-1:-1;;;;;14477:37:24;;-1:-1:-1;;;;;14477:18:24;14506:7;;;;;14477:37;;;;;;;;14422:10;;-1:-1:-1;14464:88:24;;14477:18;;;:28;;:37;;;;;14422:10;;14477:37;;;;;;;;;:18;:37;;;5:2:-1;;;;30:1;27;20:12;5:2;14477:37:24;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14477:37:24;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14477:37:24;14543:7;;;;;-1:-1:-1;;;;;14543:7:24;14516:35;;;;:26;14477:37;14516:35;;;;;14464:12;:88::i;:::-;14446:106;;14575:32;14588:6;14596:10;14575:12;:32::i;:::-;14625:11;;14566:41;;-1:-1:-1;14625:11:24;;14621:159;;;14662:29;14675:3;14680:10;14662:12;:29::i;:::-;14656:35;;14621:159;;;14736:29;14749:3;14754:10;14736:12;:29::i;:::-;14730:35;;14621:159;14386:3;;;;;14349:441;;;14134:662;;;;;;;;;:::o;15078:1252::-;15196:18;15514:8;15532;15550:11;5825:4;-1:-1:-1;;;;;5803:27:24;:10;-1:-1:-1;;;;;5803:27:24;;;5795:36;;;;;;;;15217:9;:25;;15227:14;;15217:25;;;;;;;;;;;;;;;;15196:46;;15363:1;:16;;;15356:3;:23;;15355:41;;;;-1:-1:-1;15385:11:24;;;;;;15384:12;15355:41;:116;;;;-1:-1:-1;15428:11:24;;;15441:8;;;15418:53;;;-1:-1:-1;;;;;15428:11:24;;;15418:53;;;;;;;;;;;;;15451:19;;15418:53;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;;;;365:33;;15418:53:24;;;;;;;;;;15400:14;;;;:71;;-1:-1:-1;;;;;15355:116:24;15347:125;;;;;;;;15594:26;15605:14;15594:10;:26::i;:::-;15795:13;;15571:49;;-1:-1:-1;15571:49:24;;-1:-1:-1;15571:49:24;-1:-1:-1;15785:23:24;;;15777:32;;;;;;15873:11;;;:18;;-1:-1:-1;;15873:18:24;15887:4;15873:18;;;15906:9;;;15902:314;;;15974:16;;;:23;;-1:-1:-1;;15974:23:24;;;;;16060:11;;15993:4;16083:8;;;16060:53;;;;-1:-1:-1;;;;;16060:11:24;;;;16093:19;;16060:53;;;;;;;;;;15974:23;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;16060:53:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16052:62;;;;;;;;15902:314;;;16181:16;;;:24;;-1:-1:-1;;16181:24:24;;;15902:314;16306:16;;;;16256:67;;;;;;;;;;;;;;;;;;;;;;;;16306:16;;;;;;16256:67;;;;;;;;;;;;;;;;;15078:1252;;;;;;:::o;3672:31::-;;;-1:-1:-1;;;;;3672:31:24;;:::o;3955:59::-;;;;;;;;;;;;;:::o;3642:24::-;;;;:::o;13708:187::-;13789:4;13805:18;13826:9;13836:14;13826:25;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13868:20:24;;;;;;13826:25;;;;;;;;13868:7;;:20;;;-1:-1:-1;;13868:20:24;;;;;;;13708:187;-1:-1:-1;13708:187:24:o;297:60:13:-;355:2;297:60;:::o;7080:698:24:-;5423:18;;;5417:47;;;-1:-1:-1;;;;;5417:47:24;;-1:-1:-1;;;;;5453:10:24;5417:47;;;;;;;;;;;-1:-1:-1;;5423:18:24;;;;5417:35;;:47;;;;;;;;;;;;;;;-1:-1:-1;5423:18:24;5417:47;;;5:2:-1;;;;30:1;27;20:12;5:2;5417:47:24;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5417:47:24;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5417:47:24;:51;5409:60;;;;;;-1:-1:-1;;;;;6024:10:24;6003:32;;6047:1;6003:32;;;:20;:32;;;;;;;:46;5995:55;;;;;;5825:4;-1:-1:-1;;;;;5803:27:24;:10;-1:-1:-1;;;;;5803:27:24;;;5795:36;;;;;;;;-1:-1:-1;;;;;7268:10:24;7245:34;;;;;;:22;:34;;;;;;;;:49;;;7356:36;;;;;:26;:36;;;;7343:64;;7282:12;7343;:64::i;:::-;-1:-1:-1;;;;;7304:36:24;;;;;;:26;:36;;;;;:103;7450:17;;7437:45;;7469:12;7437;:45::i;:::-;7417:17;:65;7513:10;-1:-1:-1;;;;;7492:32:24;;;;;;;:20;:32;;;;;;;;:43;;-1:-1:-1;;7492:43:24;;;;;;;7553:18;;;7597:11;;7553:70;;;;;;;;;;;;7597:11;;;7553:70;;;;;;;;;;;;:18;;;;;:31;;:70;;;;;;;;;;;;;;:18;:70;;;5:2:-1;;;;30:1;27;20:12;5:2;7553:70:24;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7553:70:24;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7553:70:24;7545:79;;;;;;;;7687:17;;7642:18;;;7671:11;;7642:41;;;-1:-1:-1;;;;;7642:41:24;;-1:-1:-1;;;;;7671:11:24;;;7642:41;;;;;;;;:18;;;:28;;:41;;;;;;;;;;;;;;:18;;:41;;;5:2:-1;;;;30:1;27;20:12;5:2;7642:41:24;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7642:41:24;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7642:41:24;:62;7634:71;;;;;;7762:8;-1:-1:-1;;;;;7720:51:24;7736:10;-1:-1:-1;;;;;7720:51:24;;7748:12;7720:51;;;;;;;;;;;;;;;;;;7080:698;;:::o;8168:788::-;-1:-1:-1;;;;;6496:10:24;6475:32;;8278:17;6475:32;;;:20;:32;;;;;;8278:17;;;;6475:32;:46;;6467:55;;;;;;5825:4;-1:-1:-1;;;;;5803:27:24;:10;-1:-1:-1;;;;;5803:27:24;;;5795:36;;;;;;;;-1:-1:-1;;;;;;;8351:10:24;8330:32;;;;;;:20;:32;;;;;;;;;8387:22;:34;;;;;;;8431:38;;;;8330:32;;8531:36;;;:26;:36;;;;;;;8518:64;;8387:34;8518:12;:64::i;:::-;-1:-1:-1;;;;;8479:36:24;;;;;;:26;:36;;;;;:103;8625:17;;8612:45;;8644:12;8612;:45::i;:::-;8592:17;:65;-1:-1:-1;;;;;8695:10:24;8674:32;;;;;;:20;:32;;;;;;;;8667:39;;-1:-1:-1;;8667:39:24;;;8724:11;;:46;;;;;;;;;;;;;;;;;;;;:11;;;:20;;:46;;;;;;;;;;;;;:11;:46;;;5:2:-1;;;;30:1;27;20:12;5:2;8724:46:24;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8724:46:24;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8724:46:24;8716:55;;;;;;;;8834:17;;8789:18;;;8818:11;;8789:41;;;-1:-1:-1;;;;;8789:41:24;;-1:-1:-1;;;;;8818:11:24;;;8789:41;;;;;;;;:18;;;:28;;:41;;;;;;;;;;;;;;:18;;:41;;;5:2:-1;;;;30:1;27;20:12;5:2;8789:41:24;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8789:41:24;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8789:41:24;:62;8781:71;;;;;;8911:8;-1:-1:-1;;;;;8867:53:24;8885:10;-1:-1:-1;;;;;8867:53:24;;8897:12;8867:53;;;;;;;;;;;;;;;;;;5841:1;8168:788;;:::o;3568:35::-;;;;:::o;9663:503::-;5651:4;-1:-1:-1;;;;;5629:27:24;:10;-1:-1:-1;;;;;5629:27:24;;5621:36;;;;;;;;9822:29;;9818:89;;;9895:1;9868:28;;9818:89;9916:13;:40;;;9966:23;:42;;;10018:29;:53;;;10140:18;;10086:73;;;;;;;;;;;;-1:-1:-1;;;;;10140:18:24;;;10086:73;;;;;;;;;;;;;;9663:503;;;:::o;3537:25::-;;;;:::o;741:244:22:-;884:33;;;;;;-1:-1:-1;;;;;884:33:22;;;;;;;905:4;884:33;;;;;;;;;;;;;;860:5;;884:14;;;;;:33;;;;;;;;;;;;;;844:7;884:14;:33;;;5:2:-1;;;;30:1;27;20:12;5:2;884:33:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;884:33:22;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;884:33:22;876:42;;;;;;;;961:5;-1:-1:-1;;;;;933:45:22;948:4;-1:-1:-1;;;;;933:45:22;;954:5;968:9;933:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;933:45:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;741:244;;;;;:::o;4253:30:24:-;;;-1:-1:-1;;;;;4253:30:24;;:::o;483:89:13:-;541:31;483:89;:::o;4172:41:24:-;;;;:::o;12840:559::-;12993:11;13020:18;5467:1;5423:18;;;;;;;;;-1:-1:-1;;;;;5423:18:24;-1:-1:-1;;;;;5417:35:24;;5453:10;5417:47;;;;;;;;;;;;;-1:-1:-1;;;;;5417:47:24;-1:-1:-1;;;;;5417:47:24;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5417:47:24;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5417:47:24;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5417:47:24;:51;5409:60;;;;;;5825:4;-1:-1:-1;;;;;5803:27:24;:10;-1:-1:-1;;;;;5803:27:24;;;5795:36;;;;;;;;13041:9;:25;;13051:14;;13041:25;;;;;;;;;;;;;;-1:-1:-1;;;;;13092:10:24;13084:19;;;:7;13041:25;;;;;13084:7;;;:19;;;;;;;13041:25;;-1:-1:-1;13084:19:24;;:27;;:19;:27;;13076:36;;;;;;13131:7;;;:16;;;;;;;;;:::i;:::-;13122:25;;13175:54;;;;;;;;;13192:16;13175:54;;;;;;13217:10;-1:-1:-1;;;;;13175:54:24;;;;13157:1;:7;;13165:6;13157:15;;;;;;;;;;;;;;;;;;:72;;:15;;:72;;;;;;-1:-1:-1;;13157:72:24;;;;;;;;;;-1:-1:-1;;13157:72:24;;-1:-1:-1;;;;;13157:72:24;;;;;;;13247:10;13239:19;;;;;;:7;;;:19;;;;;;;:26;;;;;-1:-1:-1;13239:26:24;;;;;;13293:10;;;13275:15;;;:28;13318:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12840:559;;;;;:::o;10766:992::-;6281:29;;6236:18;;;6230:47;;;-1:-1:-1;;;;;6230:47:24;;-1:-1:-1;;;;;6266:10:24;6230:47;;;;;;;;;;;-1:-1:-1;;;;6281:29:24;;6236:18;;6230:35;;:47;;;;;;;;;;;;;;-1:-1:-1;6236:18:24;6230:47;;;5:2:-1;;;;30:1;27;20:12;5:2;6230:47:24;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6230:47:24;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6230:47:24;:80;;6222:89;;;;;;5825:4;-1:-1:-1;;;;;5803:27:24;:10;-1:-1:-1;;;;;5803:27:24;;;5795:36;;;;;;;;11121:11;;-1:-1:-1;;;;;11098:35:24;;;11121:11;;11098:35;;11090:44;;;;;;11157:9;:18;;;;;;;;;:::i;:::-;11144:31;;11206:9;11216:10;11206:21;;;;;;;;;;;;;;;;;;;;;;;;;11237:25;;-1:-1:-1;;11237:25:24;-1:-1:-1;;;;;11237:25:24;;;;;-1:-1:-1;11272:8:24;;:20;;;11302:32;;11206:21;;-1:-1:-1;11302:32:24;;:14;;;;:32;;;;;:::i;:::-;;11371:11;11384:9;11395:19;11361:54;;;;-1:-1:-1;;;;;11361:54:24;-1:-1:-1;;;;;11361:54:24;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;11361:54:24;;;;;;;;;;;;11344:14;;;:71;11441:3;11425:13;;;:19;;;274:1:-1;11479:23:24;11505:9;11479:35;11473:41;-1:-1:-1;11454:16:24;;:60;11524:11;;;:19;;-1:-1:-1;;11553:24:24;;;-1:-1:-1;11587:15:24;;;:19;;;11621:66;;;-1:-1:-1;;;;;11621:66:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11621:66:24;;-1:-1:-1;11621:66:24;;-1:-1:-1;11621:66:24;;-1:-1:-1;11621:66:24;;11361:54;;-1:-1:-1;11621:66:24;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;11621:66:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11723:1;11712:12;;11697;:27;10766:992;;;;;;;:::o;602:69:13:-;660:11;602:69;:::o;12048:371:24:-;12243:18;12277;12298:9;12308:14;12298:25;;;;;;;;;;;;;;;;;;;;12277:46;;12368:11;12381:9;12392:19;12358:54;;;;-1:-1:-1;;;;;12358:54:24;-1:-1:-1;;;;;12358:54:24;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;-1:-1;;263:2;259:12;;;;254:3;250:22;246:30;;;;340:21;;;311:9;;295:26;377:20;;;;365:33;;12358:54:24;;;;;;;;;;12340:14;;;;:72;;-1:-1:-1;;;;;;12048:371:24;;;;;;;:::o;4079:29::-;;;;:::o;1008:123:1:-;1087:5;;;1105:6;;;;1098:14;;;;1008:123;;;;:::o;836:110::-;894:7;916:6;;;;909:14;;;;-1:-1:-1;936:5:1;;;836:110::o;179:838:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;179:838:13;;;-1:-1:-1;179:838:13;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;179:838:13;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;179:838:13;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;179:838:13;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i",
  "source": "/*\n\n  << Project Wyvern DAO >>\n\n*/\n\npragma solidity 0.4.23;\n\nimport \"./dao/DelegatedShareholderAssociation.sol\";\n\n/**\n * @title WyvernDAO\n * @author Project Wyvern Developers\n */\ncontract WyvernDAO is DelegatedShareholderAssociation {\n\n    string public constant name = \"Project Wyvern DAO\";\n\n    uint public constant TOKEN_DECIMALS                     = 18;\n    uint public constant REQUIRED_SHARES_TO_BE_BOARD_MEMBER = 2000 * (10 ** TOKEN_DECIMALS); // set to ~ 0.1% of supply\n    uint public constant MINIMUM_QUORUM                     = 200000 * (10 ** TOKEN_DECIMALS); // set to 10% of supply\n    uint public constant DEBATE_PERIOD_MINUTES              = 60 * 24 * 3; // set to 3 days\n\n    constructor (ERC20 sharesAddress) public {\n        sharesTokenAddress = sharesAddress;\n        requiredSharesToBeBoardMember = REQUIRED_SHARES_TO_BE_BOARD_MEMBER;\n        minimumQuorum = MINIMUM_QUORUM;\n        debatingPeriodInMinutes = DEBATE_PERIOD_MINUTES;\n        tokenLocker = new TokenLocker(sharesAddress);\n    }\n\n}\n",
  "sourcePath": "/Users/keyang/Workspace/private-chain/truffle-learn/wyvern-ethereum-demo/contracts/WyvernDAO.sol",
  "ast": {
    "absolutePath": "project:/contracts/WyvernDAO.sol",
    "exportedSymbols": {
      "WyvernDAO": [
        1047
      ]
    },
    "id": 1048,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 985,
        "literals": [
          "solidity",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:13"
      },
      {
        "absolutePath": "project:/contracts/dao/DelegatedShareholderAssociation.sol",
        "file": "./dao/DelegatedShareholderAssociation.sol",
        "id": 986,
        "nodeType": "ImportDirective",
        "scope": 1048,
        "sourceUnit": 2487,
        "src": "61:51:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 987,
              "name": "DelegatedShareholderAssociation",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2486,
              "src": "201:31:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DelegatedShareholderAssociation_$2486",
                "typeString": "contract DelegatedShareholderAssociation"
              }
            },
            "id": 988,
            "nodeType": "InheritanceSpecifier",
            "src": "201:31:13"
          }
        ],
        "contractDependencies": [
          1529,
          1594,
          2486
        ],
        "contractKind": "contract",
        "documentation": "@title WyvernDAO\n@author Project Wyvern Developers",
        "fullyImplemented": true,
        "id": 1047,
        "linearizedBaseContracts": [
          1047,
          2486,
          1594
        ],
        "name": "WyvernDAO",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 991,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 1047,
            "src": "240:50:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 989,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "240:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "50726f6a6563742057797665726e2044414f",
              "id": 990,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "270:20:13",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_1f019b9d99d270862361e3feebcfd5cd31b24916dcdd51719d6313ab90951d5e",
                "typeString": "literal_string \"Project Wyvern DAO\""
              },
              "value": "Project Wyvern DAO"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 994,
            "name": "TOKEN_DECIMALS",
            "nodeType": "VariableDeclaration",
            "scope": 1047,
            "src": "297:60:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 992,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "297:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 993,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "355:2:13",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1002,
            "name": "REQUIRED_SHARES_TO_BE_BOARD_MEMBER",
            "nodeType": "VariableDeclaration",
            "scope": 1047,
            "src": "363:87:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 995,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "363:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 1001,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "32303030",
                "id": 996,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "421:4:13",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_2000_by_1",
                  "typeString": "int_const 2000"
                },
                "value": "2000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "components": [
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "429:2:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 998,
                      "name": "TOKEN_DECIMALS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 994,
                      "src": "435:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "429:20:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1000,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "428:22:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "421:29:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1010,
            "name": "MINIMUM_QUORUM",
            "nodeType": "VariableDeclaration",
            "scope": 1047,
            "src": "483:89:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1003,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "483:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 1009,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "323030303030",
                "id": 1004,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "541:6:13",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_200000_by_1",
                  "typeString": "int_const 200000"
                },
                "value": "200000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "components": [
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 1005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "551:2:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1006,
                      "name": "TOKEN_DECIMALS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 994,
                      "src": "557:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "551:20:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1008,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "550:22:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "541:31:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1017,
            "name": "DEBATE_PERIOD_MINUTES",
            "nodeType": "VariableDeclaration",
            "scope": 1047,
            "src": "602:69:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1011,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "602:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_4320_by_1",
                "typeString": "int_const 4320"
              },
              "id": 1016,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "commonType": {
                  "typeIdentifier": "t_rational_1440_by_1",
                  "typeString": "int_const 1440"
                },
                "id": 1014,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "argumentTypes": null,
                  "hexValue": "3630",
                  "id": 1012,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "660:2:13",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_60_by_1",
                    "typeString": "int_const 60"
                  },
                  "value": "60"
                },
                "nodeType": "BinaryOperation",
                "operator": "*",
                "rightExpression": {
                  "argumentTypes": null,
                  "hexValue": "3234",
                  "id": 1013,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "665:2:13",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_24_by_1",
                    "typeString": "int_const 24"
                  },
                  "value": "24"
                },
                "src": "660:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1440_by_1",
                  "typeString": "int_const 1440"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "hexValue": "33",
                "id": 1015,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "670:1:13",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_3_by_1",
                  "typeString": "int_const 3"
                },
                "value": "3"
              },
              "src": "660:11:13",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_4320_by_1",
                "typeString": "int_const 4320"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1045,
              "nodeType": "Block",
              "src": "736:278:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1022,
                      "name": "sharesTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1654,
                      "src": "746:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$422",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1023,
                      "name": "sharesAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1019,
                      "src": "767:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$422",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "746:34:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$422",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 1025,
                  "nodeType": "ExpressionStatement",
                  "src": "746:34:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1026,
                      "name": "requiredSharesToBeBoardMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1670,
                      "src": "790:29:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1027,
                      "name": "REQUIRED_SHARES_TO_BE_BOARD_MEMBER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1002,
                      "src": "822:34:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "790:66:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1029,
                  "nodeType": "ExpressionStatement",
                  "src": "790:66:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1030,
                      "name": "minimumQuorum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1645,
                      "src": "866:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1031,
                      "name": "MINIMUM_QUORUM",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1010,
                      "src": "882:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "866:30:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1033,
                  "nodeType": "ExpressionStatement",
                  "src": "866:30:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1034,
                      "name": "debatingPeriodInMinutes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1647,
                      "src": "906:23:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1035,
                      "name": "DEBATE_PERIOD_MINUTES",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1017,
                      "src": "932:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "906:47:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1037,
                  "nodeType": "ExpressionStatement",
                  "src": "906:47:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1038,
                      "name": "tokenLocker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1672,
                      "src": "963:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenLocker_$1529",
                        "typeString": "contract TokenLocker"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1041,
                          "name": "sharesAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1019,
                          "src": "993:13:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$422",
                            "typeString": "contract ERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$422",
                            "typeString": "contract ERC20"
                          }
                        ],
                        "id": 1040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "977:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ERC20_$422_$returns$_t_contract$_TokenLocker_$1529_$",
                          "typeString": "function (contract ERC20) returns (contract TokenLocker)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1039,
                          "name": "TokenLocker",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1529,
                          "src": "981:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TokenLocker_$1529",
                            "typeString": "contract TokenLocker"
                          }
                        }
                      },
                      "id": 1042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "977:30:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenLocker_$1529",
                        "typeString": "contract TokenLocker"
                      }
                    },
                    "src": "963:44:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenLocker_$1529",
                      "typeString": "contract TokenLocker"
                    }
                  },
                  "id": 1044,
                  "nodeType": "ExpressionStatement",
                  "src": "963:44:13"
                }
              ]
            },
            "documentation": null,
            "id": 1046,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1019,
                  "name": "sharesAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1046,
                  "src": "708:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$422",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1018,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 422,
                    "src": "708:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$422",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "707:21:13"
            },
            "payable": false,
            "returnParameters": {
              "id": 1021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "736:0:13"
            },
            "scope": 1047,
            "src": "695:319:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1048,
        "src": "179:838:13"
      }
    ],
    "src": "36:982:13"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/WyvernDAO.sol",
      "exportedSymbols": {
        "WyvernDAO": [
          1047
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.4",
            ".23"
          ]
        },
        "id": 985,
        "name": "PragmaDirective",
        "src": "36:23:13"
      },
      {
        "attributes": {
          "SourceUnit": 2487,
          "absolutePath": "project:/contracts/dao/DelegatedShareholderAssociation.sol",
          "file": "./dao/DelegatedShareholderAssociation.sol",
          "scope": 1048,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 986,
        "name": "ImportDirective",
        "src": "61:51:13"
      },
      {
        "attributes": {
          "contractDependencies": [
            1529,
            1594,
            2486
          ],
          "contractKind": "contract",
          "documentation": "@title WyvernDAO\n@author Project Wyvern Developers",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1047,
            2486,
            1594
          ],
          "name": "WyvernDAO",
          "scope": 1048
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "DelegatedShareholderAssociation",
                  "referencedDeclaration": 2486,
                  "type": "contract DelegatedShareholderAssociation"
                },
                "id": 987,
                "name": "UserDefinedTypeName",
                "src": "201:31:13"
              }
            ],
            "id": 988,
            "name": "InheritanceSpecifier",
            "src": "201:31:13"
          },
          {
            "attributes": {
              "constant": true,
              "name": "name",
              "scope": 1047,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "string",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "string",
                  "type": "string"
                },
                "id": 989,
                "name": "ElementaryTypeName",
                "src": "240:6:13"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "50726f6a6563742057797665726e2044414f",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "string",
                  "type": "literal_string \"Project Wyvern DAO\"",
                  "value": "Project Wyvern DAO"
                },
                "id": 990,
                "name": "Literal",
                "src": "270:20:13"
              }
            ],
            "id": 991,
            "name": "VariableDeclaration",
            "src": "240:50:13"
          },
          {
            "attributes": {
              "constant": true,
              "name": "TOKEN_DECIMALS",
              "scope": 1047,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 992,
                "name": "ElementaryTypeName",
                "src": "297:4:13"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "3138",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "number",
                  "type": "int_const 18",
                  "value": "18"
                },
                "id": 993,
                "name": "Literal",
                "src": "355:2:13"
              }
            ],
            "id": 994,
            "name": "VariableDeclaration",
            "src": "297:60:13"
          },
          {
            "attributes": {
              "constant": true,
              "name": "REQUIRED_SHARES_TO_BE_BOARD_MEMBER",
              "scope": 1047,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 995,
                "name": "ElementaryTypeName",
                "src": "363:4:13"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "commonType": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "operator": "*",
                  "type": "uint256"
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "32303030",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "number",
                      "type": "int_const 2000",
                      "value": "2000"
                    },
                    "id": 996,
                    "name": "Literal",
                    "src": "421:4:13"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "type": "uint256"
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "operator": "**",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "3130",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 10",
                              "value": "10"
                            },
                            "id": 997,
                            "name": "Literal",
                            "src": "429:2:13"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 994,
                              "type": "uint256",
                              "value": "TOKEN_DECIMALS"
                            },
                            "id": 998,
                            "name": "Identifier",
                            "src": "435:14:13"
                          }
                        ],
                        "id": 999,
                        "name": "BinaryOperation",
                        "src": "429:20:13"
                      }
                    ],
                    "id": 1000,
                    "name": "TupleExpression",
                    "src": "428:22:13"
                  }
                ],
                "id": 1001,
                "name": "BinaryOperation",
                "src": "421:29:13"
              }
            ],
            "id": 1002,
            "name": "VariableDeclaration",
            "src": "363:87:13"
          },
          {
            "attributes": {
              "constant": true,
              "name": "MINIMUM_QUORUM",
              "scope": 1047,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 1003,
                "name": "ElementaryTypeName",
                "src": "483:4:13"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "commonType": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "operator": "*",
                  "type": "uint256"
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "323030303030",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "number",
                      "type": "int_const 200000",
                      "value": "200000"
                    },
                    "id": 1004,
                    "name": "Literal",
                    "src": "541:6:13"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "type": "uint256"
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "operator": "**",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "3130",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 10",
                              "value": "10"
                            },
                            "id": 1005,
                            "name": "Literal",
                            "src": "551:2:13"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 994,
                              "type": "uint256",
                              "value": "TOKEN_DECIMALS"
                            },
                            "id": 1006,
                            "name": "Identifier",
                            "src": "557:14:13"
                          }
                        ],
                        "id": 1007,
                        "name": "BinaryOperation",
                        "src": "551:20:13"
                      }
                    ],
                    "id": 1008,
                    "name": "TupleExpression",
                    "src": "550:22:13"
                  }
                ],
                "id": 1009,
                "name": "BinaryOperation",
                "src": "541:31:13"
              }
            ],
            "id": 1010,
            "name": "VariableDeclaration",
            "src": "483:89:13"
          },
          {
            "attributes": {
              "constant": true,
              "name": "DEBATE_PERIOD_MINUTES",
              "scope": 1047,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 1011,
                "name": "ElementaryTypeName",
                "src": "602:4:13"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "commonType": {
                    "typeIdentifier": "t_rational_4320_by_1",
                    "typeString": "int_const 4320"
                  },
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "operator": "*",
                  "type": "int_const 4320"
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_1440_by_1",
                        "typeString": "int_const 1440"
                      },
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "operator": "*",
                      "type": "int_const 1440"
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "3630",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "number",
                          "type": "int_const 60",
                          "value": "60"
                        },
                        "id": 1012,
                        "name": "Literal",
                        "src": "660:2:13"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "3234",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "number",
                          "type": "int_const 24",
                          "value": "24"
                        },
                        "id": 1013,
                        "name": "Literal",
                        "src": "665:2:13"
                      }
                    ],
                    "id": 1014,
                    "name": "BinaryOperation",
                    "src": "660:7:13"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "33",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "number",
                      "type": "int_const 3",
                      "value": "3"
                    },
                    "id": 1015,
                    "name": "Literal",
                    "src": "670:1:13"
                  }
                ],
                "id": 1016,
                "name": "BinaryOperation",
                "src": "660:11:13"
              }
            ],
            "id": 1017,
            "name": "VariableDeclaration",
            "src": "602:69:13"
          },
          {
            "attributes": {
              "constant": false,
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "modifiers": [
                null
              ],
              "name": "",
              "payable": false,
              "scope": 1047,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "sharesAddress",
                      "scope": 1046,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract ERC20",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "ERC20",
                          "referencedDeclaration": 422,
                          "type": "contract ERC20"
                        },
                        "id": 1018,
                        "name": "UserDefinedTypeName",
                        "src": "708:5:13"
                      }
                    ],
                    "id": 1019,
                    "name": "VariableDeclaration",
                    "src": "708:19:13"
                  }
                ],
                "id": 1020,
                "name": "ParameterList",
                "src": "707:21:13"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1021,
                "name": "ParameterList",
                "src": "736:0:13"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract ERC20"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1654,
                              "type": "contract ERC20",
                              "value": "sharesTokenAddress"
                            },
                            "id": 1022,
                            "name": "Identifier",
                            "src": "746:18:13"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1019,
                              "type": "contract ERC20",
                              "value": "sharesAddress"
                            },
                            "id": 1023,
                            "name": "Identifier",
                            "src": "767:13:13"
                          }
                        ],
                        "id": 1024,
                        "name": "Assignment",
                        "src": "746:34:13"
                      }
                    ],
                    "id": 1025,
                    "name": "ExpressionStatement",
                    "src": "746:34:13"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1670,
                              "type": "uint256",
                              "value": "requiredSharesToBeBoardMember"
                            },
                            "id": 1026,
                            "name": "Identifier",
                            "src": "790:29:13"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1002,
                              "type": "uint256",
                              "value": "REQUIRED_SHARES_TO_BE_BOARD_MEMBER"
                            },
                            "id": 1027,
                            "name": "Identifier",
                            "src": "822:34:13"
                          }
                        ],
                        "id": 1028,
                        "name": "Assignment",
                        "src": "790:66:13"
                      }
                    ],
                    "id": 1029,
                    "name": "ExpressionStatement",
                    "src": "790:66:13"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1645,
                              "type": "uint256",
                              "value": "minimumQuorum"
                            },
                            "id": 1030,
                            "name": "Identifier",
                            "src": "866:13:13"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1010,
                              "type": "uint256",
                              "value": "MINIMUM_QUORUM"
                            },
                            "id": 1031,
                            "name": "Identifier",
                            "src": "882:14:13"
                          }
                        ],
                        "id": 1032,
                        "name": "Assignment",
                        "src": "866:30:13"
                      }
                    ],
                    "id": 1033,
                    "name": "ExpressionStatement",
                    "src": "866:30:13"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1647,
                              "type": "uint256",
                              "value": "debatingPeriodInMinutes"
                            },
                            "id": 1034,
                            "name": "Identifier",
                            "src": "906:23:13"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1017,
                              "type": "uint256",
                              "value": "DEBATE_PERIOD_MINUTES"
                            },
                            "id": 1035,
                            "name": "Identifier",
                            "src": "932:21:13"
                          }
                        ],
                        "id": 1036,
                        "name": "Assignment",
                        "src": "906:47:13"
                      }
                    ],
                    "id": 1037,
                    "name": "ExpressionStatement",
                    "src": "906:47:13"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract TokenLocker"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1672,
                              "type": "contract TokenLocker",
                              "value": "tokenLocker"
                            },
                            "id": 1038,
                            "name": "Identifier",
                            "src": "963:11:13"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "contract TokenLocker",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ERC20_$422",
                                      "typeString": "contract ERC20"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "function (contract ERC20) returns (contract TokenLocker)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "contractScope": null,
                                      "name": "TokenLocker",
                                      "referencedDeclaration": 1529,
                                      "type": "contract TokenLocker"
                                    },
                                    "id": 1039,
                                    "name": "UserDefinedTypeName",
                                    "src": "981:11:13"
                                  }
                                ],
                                "id": 1040,
                                "name": "NewExpression",
                                "src": "977:15:13"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1019,
                                  "type": "contract ERC20",
                                  "value": "sharesAddress"
                                },
                                "id": 1041,
                                "name": "Identifier",
                                "src": "993:13:13"
                              }
                            ],
                            "id": 1042,
                            "name": "FunctionCall",
                            "src": "977:30:13"
                          }
                        ],
                        "id": 1043,
                        "name": "Assignment",
                        "src": "963:44:13"
                      }
                    ],
                    "id": 1044,
                    "name": "ExpressionStatement",
                    "src": "963:44:13"
                  }
                ],
                "id": 1045,
                "name": "Block",
                "src": "736:278:13"
              }
            ],
            "id": 1046,
            "name": "FunctionDefinition",
            "src": "695:319:13"
          }
        ],
        "id": 1047,
        "name": "ContractDefinition",
        "src": "179:838:13"
      }
    ],
    "id": 1048,
    "name": "SourceUnit",
    "src": "36:982:13"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.23+commit.124ca40d.Emscripten.clang"
  },
  "networks": {
    "42": {
      "events": {},
      "links": {},
      "address": "0xf211E5b8047f62F045cB2e05C10e73C91F6462DB",
      "transactionHash": "0x52292c656ce5729859891da09a0813cd052558c89ccddbe08806239262511ea2"
    },
    "1653531544240": {
      "events": {},
      "links": {},
      "address": "0x12f5f6aC6f0cD10F316f45D055aD99A15F1258E3",
      "transactionHash": "0xaac6e42b33c021a9b2c0a11ce1607fbff8c41b0ac9d1ea535a193558fc65a793"
    }
  },
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-05-26T03:00:50.523Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "Project Wyvern Developers",
    "methods": {
      "changeVotingRules(uint256,uint256,uint256)": {
        "params": {
          "minimumSharesToPassAVote": "proposal can vote only if the sum of shares held by all voters exceed this number",
          "minutesForDebate": "the minimum amount of delay between when a proposal is made and when it can be executed",
          "sharesToBeBoardMember": "the minimum number of shares required to create proposals"
        }
      },
      "checkProposalCode(uint256,address,uint256,bytes)": {
        "params": {
          "beneficiary": "who to send the ether to",
          "proposalNumber": "ID number of the proposal to query",
          "transactionBytecode": "bytecode of transaction",
          "weiAmount": "amount of ether to send"
        }
      },
      "clearDelegateAndUnlockTokens()": {
        "details": "Can only be called by a sending address currently delegating tokens, will transfer all locked tokens back to the sender",
        "return": "The number of tokens previously locked, now released"
      },
      "countVotes(uint256)": {
        "params": {
          "proposalNumber": "proposal number"
        },
        "return": "yea votes, nay votes, quorum (total votes)"
      },
      "executeProposal(uint256,bytes)": {
        "params": {
          "proposalNumber": "proposal number",
          "transactionBytecode": "optional: if the transaction contained a bytecode, you need to send it"
        }
      },
      "hasVoted(uint256,address)": {
        "params": {
          "proposalNumber": "proposal number",
          "shareholder": "address to query"
        },
        "return": "whether or not the specified address has cast a vote on the specified proposal"
      },
      "newProposal(address,uint256,bytes,bytes)": {
        "details": "Submit proposal for the DAO to execute a particular transaction. Submitter should check that the `beneficiary` account exists, unless the intent is to burn Ether.",
        "params": {
          "beneficiary": "who to send the ether to",
          "jobMetadataHash": "Hash of job metadata (IPFS)",
          "transactionBytecode": "bytecode of transaction",
          "weiAmount": "amount of ether to send, in wei"
        }
      },
      "receiveApproval(address,uint256,address,bytes)": {
        "details": "Receive tokens and generate a log event",
        "params": {
          "extraData": "Additional data to log",
          "from": "Address from which to transfer tokens",
          "token": "Address of token",
          "value": "Amount of tokens to transfer"
        }
      },
      "setDelegateAndLockTokens(uint256,address)": {
        "details": "An address holding tokens (shares) may only delegate some portion of their vote to one delegate at any one time",
        "params": {
          "delegate": "the address to which votes equal to the number of tokens locked will be delegated",
          "tokensToLock": "number of tokens to be locked (sending address must have at least this many tokens)"
        }
      },
      "vote(uint256,bool)": {
        "details": "Vote in favor or against an existing proposal. Voter should check that the proposal destination account exists, unless the intent is to burn Ether.",
        "params": {
          "proposalNumber": "number of proposal",
          "supportsProposal": "either in favor or against it"
        }
      }
    },
    "title": "WyvernDAO"
  },
  "userdoc": {
    "methods": {
      "changeVotingRules(uint256,uint256,uint256)": {
        "notice": "Change voting rules     * Make so that proposals need tobe discussed for at least `minutesForDebate/60` hours and all voters combined must own more than `minimumSharesToPassAVote` shares of token `sharesAddress` to be executed and a shareholder needs `sharesToBeBoardMember` shares to create a transaction proposal"
      },
      "checkProposalCode(uint256,address,uint256,bytes)": {
        "notice": "Check if a proposal code matches"
      },
      "clearDelegateAndUnlockTokens()": {
        "notice": "Undelegate all delegated tokens Clear the delegate address for all tokens delegated by the sending address, unlocking the locked tokens."
      },
      "countVotes(uint256)": {
        "notice": "Count the votes, including delegated votes, in support of, against, and in total for a particular proposal"
      },
      "executeProposal(uint256,bytes)": {
        "notice": "Finish vote     * Count the votes proposal #`proposalNumber` and execute it if approved"
      },
      "hasVoted(uint256,address)": {
        "notice": "Return whether a particular shareholder has voted on a particular proposal (convenience function)"
      },
      "newProposal(address,uint256,bytes,bytes)": {
        "notice": "Add Proposal     * Propose to send `weiAmount / 1e18` ether to `beneficiary` for `jobMetadataHash`. `transactionBytecode ? Contains : Does not contain` code."
      },
      "setDelegateAndLockTokens(uint256,address)": {
        "notice": "Delegate an amount of tokens Set the delegate address for a specified number of tokens belonging to the sending address, locking the tokens."
      },
      "vote(uint256,bool)": {
        "notice": "Log a vote for a proposal     * Vote `supportsProposal? in support of : against` proposal #`proposalNumber`"
      }
    }
  }
}